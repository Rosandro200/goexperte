rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /gigs/{gigId} {
      allow read: if true;  // Anyone can read gigs
      allow create: if isAuthenticated(); 
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
      
      // Add validation rules
      function isValidGig() {
        let gig = request.resource.data;
        return gig.title.size() >= 5 && 
               gig.title.size() <= 100 &&
               gig.price >= 0 &&
               gig.description.size() >= 20;
      }
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if isAuthenticated() && isOwner(userId);
    }
  }
}